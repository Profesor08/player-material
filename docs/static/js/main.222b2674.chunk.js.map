{"version":3,"sources":["store/index.ts","lib/Tracks.ts","components/TrackImages.tsx","components/PlayerControl.tsx","components/PlayerControls.tsx","lib/Utils.ts","components/TrackInfo.tsx","components/Playlist.tsx","components/InputRange.tsx","components/Progress.tsx","components/AudioPlayer.tsx","components/SidebarButton.tsx","components/Sidebar.tsx","components/Player.tsx","components/App.tsx","serviceWorker.js","index.tsx"],"names":["PLAY_ACTION","SHUFFLE_ACTION","REPEAT_ACTION","SET_TRACKS_ACTION","SET_TRACK_ACTION","TOGGLE_PLAYLIST_ACTION","SET_PROGRESS","SET_AUDIO_PROGRESS_UPDATE_STATE","TOGGLE_SIDEBAR_ACTION","SET_VOLUME_ACTION","playToggleAction","state","type","setTrackAction","track","setTracksAction","tracks","togglePlaylistAction","setProgressAction","progress","setAudioPlayerProgressNeedsUpdateAction","toggleSidebarAction","initialPlayerState","volume","shuffle","repeat","paused","playlistActive","audioPlayerProgressNeedsUpdate","initialTracksState","initialProgressState","initialSidebarState","sidebarActive","json","localStorage","getItem","config","JSON","parse","err","store","createStore","combineReducers","player","arguments","length","undefined","action","Object","objectSpread","sidebar","coverSize","x500","x400","x300","x100","x67","x47","x32","x20","x18","x16","buildUrl","url","params","keys","map","param","concat","encodeURIComponent","join","get","_callee3","response","regenerator_default","a","wrap","_context3","prev","next","fetch","sent","abrupt","stop","getProfileData","_callee4","profileUrl","_context4","client_id","process","t0","Error","getProfileLikes","_callee5","profile","progressCallback","_context5","id","format","limit","date","Date","now","linked_partitioning","next_href","prepeareTracks","collection","filter","trackData","artwork_url","getArtwork","stream_url","prepeareTrack","size","replace","user","avatar_url","includes","shuffleTracks","foundTrack","getRandomTrack","currentTrack","Math","floor","random","push","findRandomTrack","trackId","trackIndex","findIndex","findNextTrack","Tracks","require","flickityOptions","initialIndex","wrapAround","setGallerySize","prevNextButtons","TrackImages","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","flickity","componentDidMount","on","_ref","asyncToGenerator","mark","_callee","e","_context","setTrack","_x","apply","shouldComponentUpdate","nextProps","select","i","findTrackId","render","react_default","createElement","lib_default","className","options","flickityRef","ref","key","style","backgroundImage","Component","connect","dispatch","PlayerControl","active","ripple","CSSTransition","in","animated","classNames","timeout","onEntered","setState","onMouseDownCapture","preventDefault","onTouchStartCapture","onMouseUpCapture","onTouchEndCapture","children","defaultProps","PlayerControls","playToggle","togglePlay","shuffleToggle","toggleShuffle","repeatToggle","toggleRepeat","prevTrack","findPrevTrack","pop","nextTrack","componentDidUpdate","prevProps","play","PlayerControl_PlayerControl","Shuffle_default","SkipPrevious_default","PlayArrow_default","Pause_default","SkipNext_default","Repeat_default","RepeatOne_default","shuffleToggleAction","repeatToggleAction","Utils","t","h","m","s","time","TrackInfo","title","username","duration","onClick","togglePlaylist","formatTimestamp","Playlist","playlist","scrollToTrack","playTrack","togglePLay","top","offsetHeight","trackHeight","scrollTo","behavior","progressWidth","width","InputRange","inputValue","trackWidth","changeStart","value","changing","onStart","changeStop","onEnd","max","min","step","onChange","parseFloat","target","Progress","updateProgress","throttle","setProgress","parseInt","components_InputRange","audioProgressNeedsUpdate","AudioPlayer","audio","addEventListener","src","canplay","currentTime","loop","audioProgressUpdated","pause","console","log","display","SidebarButton","toggleSidebar","Sidebar","updateVolume","setVolume","volumeClassName","alt","height","VolumeUp_default","VolumeMute_default","setVolumeAction","Player","loadTracks","components_SidebarButton","components_Sidebar","components_TrackImages","components_TrackInfo","components_Progress","components_AudioPlayer","components_PlayerControls","components_Playlist","_loadTracks","_callee2","_context2","t2","t3","t1","t4","t5","demo","t6","t7","App","components_Player","Boolean","window","location","hostname","match","ReactDOM","es","components_App","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.222b2674.chunk.js","sourcesContent":["import { createStore, combineReducers } from \"redux\";\r\nimport { Track } from \"../lib/Tracks\";\r\n\r\nconst PLAY_ACTION = \"PLAY_ACTION\";\r\nconst SHUFFLE_ACTION = \"SHUFFLE_ACTION\";\r\nconst REPEAT_ACTION = \"REPEAT_ACTION\";\r\nconst SET_TRACKS_ACTION = \"SET_TRACKS_ACTION\";\r\nconst SET_TRACK_ACTION = \"SET_TRACK_ACTION\";\r\nconst TOGGLE_PLAYLIST_ACTION = \"TOGGLE_PLAYLIST_ACTION\";\r\nconst SET_PROGRESS = \"SET_PROGRESS\";\r\nconst SET_AUDIO_PROGRESS_UPDATE_STATE = \"SET_AUDIO_PROGRESS_UPDATE_STATE\";\r\nconst TOGGLE_SIDEBAR_ACTION = \"TOGGLE_SIDEBAR_ACTION\";\r\nconst SET_VOLUME_ACTION = \"SET_VOLUME_ACTION\";\r\n\r\nexport interface PlayerState {\r\n  volume: number;\r\n  shuffle: boolean;\r\n  repeat: boolean;\r\n  paused: boolean;\r\n  track: Track | null;\r\n  playlistActive: boolean;\r\n  audioPlayerProgressNeedsUpdate: boolean;\r\n}\r\n\r\nexport interface TracksState {\r\n  tracks: Track[];\r\n}\r\n\r\nexport interface SidebarState {\r\n  sidebarActive: boolean;\r\n}\r\n\r\nexport interface ProgressState {\r\n  progress: number;\r\n}\r\n\r\nexport interface PlayToggleAction {\r\n  type: \"PLAY_ACTION\";\r\n  state: boolean;\r\n}\r\n\r\nexport interface ShuffleToggleAction {\r\n  type: \"SHUFFLE_ACTION\";\r\n  state: boolean;\r\n}\r\n\r\nexport interface RepeatToggleAction {\r\n  type: \"REPEAT_ACTION\";\r\n  state: boolean;\r\n}\r\n\r\nexport interface SetTracksAction {\r\n  type: \"SET_TRACKS_ACTION\";\r\n  tracks: Track[];\r\n}\r\n\r\nexport interface SetTrackAction {\r\n  type: \"SET_TRACK_ACTION\";\r\n  track: Track;\r\n}\r\n\r\nexport interface TogglePlaylistAction {\r\n  type: \"TOGGLE_PLAYLIST_ACTION\";\r\n  state: boolean;\r\n}\r\n\r\nexport interface SetProgressAction {\r\n  type: \"SET_PROGRESS\";\r\n  progress: number;\r\n}\r\n\r\nexport interface SetAudioPlayerProgressNeedsUpdateAction {\r\n  type: \"SET_AUDIO_PROGRESS_UPDATE_STATE\";\r\n  state: boolean;\r\n}\r\n\r\nexport interface ToggleSidebarAction {\r\n  type: \"TOGGLE_SIDEBAR_ACTION\";\r\n  state: boolean;\r\n}\r\n\r\nexport interface SetVolumeAction {\r\n  type: \"SET_VOLUME_ACTION\";\r\n  volume: number;\r\n}\r\n\r\ntype PlayerAction =\r\n  | PlayToggleAction\r\n  | ShuffleToggleAction\r\n  | RepeatToggleAction\r\n  | SetTrackAction\r\n  | TogglePlaylistAction\r\n  | SetAudioPlayerProgressNeedsUpdateAction\r\n  | SetVolumeAction;\r\n\r\ntype TracksAction = SetTracksAction;\r\n\r\ntype ProgressAction = SetProgressAction;\r\n\r\ntype SidebarAction = ToggleSidebarAction;\r\n\r\nexport function playToggleAction(state: boolean): PlayToggleAction {\r\n  return {\r\n    type: PLAY_ACTION,\r\n    state: state,\r\n  };\r\n}\r\n\r\nexport function shuffleToggleAction(state: boolean): ShuffleToggleAction {\r\n  return {\r\n    type: SHUFFLE_ACTION,\r\n    state: state,\r\n  };\r\n}\r\n\r\nexport function repeatToggleAction(state: boolean): RepeatToggleAction {\r\n  return {\r\n    type: REPEAT_ACTION,\r\n    state: state,\r\n  };\r\n}\r\n\r\nexport function setTrackAction(track: Track): SetTrackAction {\r\n  return {\r\n    type: SET_TRACK_ACTION,\r\n    track: track,\r\n  };\r\n}\r\n\r\nexport function setTracksAction(tracks: Track[]): SetTracksAction {\r\n  return {\r\n    type: SET_TRACKS_ACTION,\r\n    tracks: tracks,\r\n  };\r\n}\r\n\r\nexport function togglePlaylistAction(state: boolean): TogglePlaylistAction {\r\n  return {\r\n    type: TOGGLE_PLAYLIST_ACTION,\r\n    state: state,\r\n  };\r\n}\r\n\r\nexport function setProgressAction(progress: number): SetProgressAction {\r\n  return {\r\n    type: SET_PROGRESS,\r\n    progress: progress,\r\n  };\r\n}\r\n\r\nexport function setAudioPlayerProgressNeedsUpdateAction(\r\n  state: boolean,\r\n): SetAudioPlayerProgressNeedsUpdateAction {\r\n  return {\r\n    type: SET_AUDIO_PROGRESS_UPDATE_STATE,\r\n    state: state,\r\n  };\r\n}\r\n\r\nexport function toggleSidebarAction(state: boolean): ToggleSidebarAction {\r\n  return {\r\n    type: TOGGLE_SIDEBAR_ACTION,\r\n    state: state,\r\n  };\r\n}\r\n\r\nexport function setVolumeAction(volume: number): SetVolumeAction {\r\n  return {\r\n    type: SET_VOLUME_ACTION,\r\n    volume: volume,\r\n  };\r\n}\r\n\r\nconst initialPlayerState: PlayerState = {\r\n  volume: 0.2,\r\n  shuffle: false,\r\n  repeat: false,\r\n  paused: true,\r\n  track: null,\r\n  playlistActive: false,\r\n  audioPlayerProgressNeedsUpdate: true,\r\n};\r\n\r\nconst initialTracksState: TracksState = {\r\n  tracks: [],\r\n};\r\n\r\nconst initialProgressState: ProgressState = {\r\n  progress: 0,\r\n};\r\n\r\nconst initialSidebarState: SidebarState = {\r\n  sidebarActive: false,\r\n};\r\n\r\ntry {\r\n  const json = localStorage.getItem(\"playerConfiguration\");\r\n\r\n  if (json) {\r\n    const config: PlayerState = JSON.parse(json);\r\n\r\n    initialPlayerState.shuffle = config.shuffle;\r\n    initialPlayerState.repeat = config.repeat;\r\n  }\r\n} catch (err) {}\r\n\r\nfunction player(\r\n  state: PlayerState = initialPlayerState,\r\n  action: PlayerAction,\r\n): PlayerState {\r\n  switch (action.type) {\r\n    case PLAY_ACTION: {\r\n      return {\r\n        ...state,\r\n        paused: action.state,\r\n      };\r\n    }\r\n\r\n    case SHUFFLE_ACTION: {\r\n      return {\r\n        ...state,\r\n        shuffle: action.state,\r\n      };\r\n    }\r\n\r\n    case REPEAT_ACTION: {\r\n      return {\r\n        ...state,\r\n        repeat: action.state,\r\n      };\r\n    }\r\n\r\n    case SET_TRACK_ACTION: {\r\n      return {\r\n        ...state,\r\n        track: action.track,\r\n      };\r\n    }\r\n\r\n    case TOGGLE_PLAYLIST_ACTION: {\r\n      return {\r\n        ...state,\r\n        playlistActive: action.state,\r\n      };\r\n    }\r\n\r\n    case SET_AUDIO_PROGRESS_UPDATE_STATE: {\r\n      return {\r\n        ...state,\r\n        audioPlayerProgressNeedsUpdate: action.state,\r\n      };\r\n    }\r\n\r\n    case SET_VOLUME_ACTION: {\r\n      return {\r\n        ...state,\r\n        volume: action.volume,\r\n      };\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction tracks(state: TracksState = initialTracksState, action: TracksAction) {\r\n  switch (action.type) {\r\n    case SET_TRACKS_ACTION: {\r\n      return {\r\n        ...state,\r\n        tracks: action.tracks,\r\n      };\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction progress(\r\n  state: ProgressState = initialProgressState,\r\n  action: ProgressAction,\r\n) {\r\n  switch (action.type) {\r\n    case SET_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        progress: action.progress,\r\n      };\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction sidebar(\r\n  state: SidebarState = initialSidebarState,\r\n  action: SidebarAction,\r\n) {\r\n  switch (action.type) {\r\n    case TOGGLE_SIDEBAR_ACTION: {\r\n      return {\r\n        ...state,\r\n        sidebarActive: action.state,\r\n      };\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    player,\r\n    tracks,\r\n    progress,\r\n    sidebar,\r\n  }),\r\n);\r\n\r\nexport default store;\r\n","export interface TrackUser {\r\n  id: number;\r\n  kind: string;\r\n  permalink: string;\r\n  username: string;\r\n  last_modified: string;\r\n  uri: string;\r\n  permalink_url: string;\r\n  avatar_url: string;\r\n}\r\n\r\nexport interface Track {\r\n  kind: string;\r\n  id: number;\r\n  created_at: string;\r\n  user_id: number;\r\n  duration: number;\r\n  commentable: boolean;\r\n  state: string;\r\n  original_content_size: number;\r\n  last_modified: string;\r\n  sharing: string;\r\n  tag_list: string;\r\n  permalink: string;\r\n  streamable: boolean;\r\n  embeddable_by: string;\r\n  downloadable: boolean;\r\n  purchase_url: null;\r\n  label_id: null;\r\n  purchase_title: null;\r\n  genre: string;\r\n  title: string;\r\n  description: string;\r\n  label_name: string;\r\n  release: string;\r\n  track_type: string;\r\n  key_signature: string;\r\n  isrc: string;\r\n  video_url: null;\r\n  bpm: null;\r\n  release_year: null;\r\n  release_month: null;\r\n  release_day: null;\r\n  original_format: string;\r\n  license: string;\r\n  uri: string;\r\n  user: TrackUser;\r\n  attachments_uri: string | null;\r\n  permalink_url: string | null;\r\n  artwork_url: string | null;\r\n  waveform_url: string | null;\r\n  stream_url: string;\r\n  playback_count: number;\r\n  download_count: number;\r\n  favoritings_count: number;\r\n  comment_count: number;\r\n}\r\n\r\nexport interface TrackData {\r\n  kind: string;\r\n  created_at: string;\r\n  track: Track;\r\n  playlist: string | null;\r\n}\r\n\r\nexport interface LikesResponse {\r\n  collection: TrackData[];\r\n  next_href?: string;\r\n}\r\n\r\nexport interface Profile {\r\n  country: string | null;\r\n  subscriptions: [];\r\n  city: string | null;\r\n  description: string | null;\r\n  track_count: number;\r\n  discogs_name: string | null;\r\n  public_favorites_count: number;\r\n  id: number;\r\n  reposts_count: number;\r\n  myspace_name: string | null;\r\n  website_title: string | null;\r\n  last_modified: string;\r\n  first_name: string | null;\r\n  plan: string;\r\n  playlist_count: number;\r\n  website: string | null;\r\n  kind: string;\r\n  last_name: string | null;\r\n  uri: string;\r\n  followings_count: number;\r\n  full_name: string;\r\n  avatar_url: string | null;\r\n  followers_count: number;\r\n  online: boolean;\r\n  permalink: string;\r\n  permalink_url: string;\r\n  username: string;\r\n}\r\n\r\ninterface CoverSize {\r\n  x500: string;\r\n  x400: string;\r\n  x300: string;\r\n  x100: string;\r\n  x67: string;\r\n  x47: string;\r\n  x32: string;\r\n  x20: string;\r\n  x18: string;\r\n  x16: string;\r\n}\r\n\r\nconst coverSize: CoverSize = {\r\n  x500: \"t500x500\",\r\n  x400: \"crop\",\r\n  x300: \"t300x300\",\r\n  x100: \"large\",\r\n  x67: \"t67x67\",\r\n  x47: \"badge\",\r\n  x32: \"small\",\r\n  x20: \"tiny\",\r\n  x18: \"tiny\",\r\n  x16: \"mini\",\r\n};\r\n\r\nfunction buildUrl(url: string, params?: { [key: string]: any }): string {\r\n  if (params) {\r\n    return (\r\n      url +\r\n      \"?\" +\r\n      Object.keys(params)\r\n        .map((param: string) => {\r\n          return `${param}=${encodeURIComponent(params[param])}`;\r\n        })\r\n        .join(\"&\")\r\n    );\r\n  } else {\r\n    return url;\r\n  }\r\n}\r\n\r\nasync function get(url: string, params?: {}): Promise<any> {\r\n  const response = await fetch(buildUrl(url, params));\r\n  const json = await response.json();\r\n\r\n  return json;\r\n}\r\n\r\nasync function getProfileData(profileUrl: string): Promise<Profile> {\r\n  try {\r\n    return await get(`https://api.soundcloud.com/resolve`, {\r\n      client_id: process.env.REACT_APP_SC_CLIENT_ID,\r\n      url: profileUrl,\r\n    });\r\n  } catch (err) {\r\n    throw new Error(\"Unable to load Soundcloud profile data.\");\r\n  }\r\n}\r\n\r\nasync function getProfileLikes(\r\n  profile: Profile,\r\n  progressCallback?: (tracks: Track[]) => void,\r\n): Promise<Track[]> {\r\n  let tracks: Track[] = [];\r\n\r\n  let response: LikesResponse = await get(\r\n    `https://api.soundcloud.com/e1/users/${profile.id}/likes`,\r\n    {\r\n      format: \"json\",\r\n      limit: 24,\r\n      date: Date.now(),\r\n      client_id: process.env.REACT_APP_SC_CLIENT_ID,\r\n      linked_partitioning: 1,\r\n    },\r\n  );\r\n\r\n  while (response.next_href) {\r\n    tracks = tracks.concat(prepeareTracks(response.collection));\r\n\r\n    if (progressCallback) {\r\n      progressCallback(tracks);\r\n    }\r\n\r\n    response = await get(response.next_href);\r\n  }\r\n\r\n  tracks = tracks.concat(prepeareTracks(response.collection));\r\n\r\n  return tracks;\r\n}\r\n\r\nfunction prepeareTracks(tracks: TrackData[]): Track[] {\r\n  const tracks2 = tracks\r\n    .filter(track => track.track !== null)\r\n    .map(track => prepeareTrack(track));\r\n  return tracks2;\r\n}\r\n\r\nfunction prepeareTrack(trackData: TrackData): Track {\r\n  const track = trackData.track;\r\n\r\n  return {\r\n    ...track,\r\n    artwork_url: getArtwork(track, coverSize.x500),\r\n    stream_url:\r\n      track.stream_url + \"?client_id=\" + process.env.REACT_APP_SC_CLIENT_ID,\r\n  };\r\n}\r\n\r\nfunction getArtwork(track: Track, size: string): string {\r\n  if (track.artwork_url !== null) {\r\n    return track.artwork_url.replace(/large/, size);\r\n  } else if (track.user.avatar_url !== null) {\r\n    if (track.user.avatar_url.includes(\"default_avatar\")) {\r\n      return process.env.PUBLIC_URL + \"/no-cover.svg\";\r\n    } else {\r\n      return track.user.avatar_url.replace(/large/, size);\r\n    }\r\n  }\r\n\r\n  return \"\";\r\n}\r\n\r\nlet shuffleTracks: Track[] = [];\r\n\r\nexport function getRandomTrack(\r\n  tracks: Track[],\r\n  currentTrack: Track | null,\r\n): Track {\r\n  let foundTrack = tracks[Math.floor(Math.random() * tracks.length)];\r\n\r\n  if (tracks.length > 1 && currentTrack && foundTrack.id === currentTrack.id) {\r\n    return getRandomTrack(tracks, currentTrack);\r\n  }\r\n\r\n  return foundTrack;\r\n}\r\n\r\nexport function next(\r\n  tracks: Track[],\r\n  track: Track | null,\r\n  shuffle: boolean,\r\n): Track | null {\r\n  const findNextTrack = (): Track | null => {\r\n    if (track) {\r\n      const trackId = track.id;\r\n      const trackIndex = tracks.findIndex(track => track.id === trackId);\r\n\r\n      if (trackIndex < tracks.length - 1) {\r\n        return tracks[trackIndex + 1] || null;\r\n      } else if (tracks.length > 0) {\r\n        return tracks[0] || null;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const findRandomTrack = (): Track | null => {\r\n    const foundTrack = getRandomTrack(tracks, track);\r\n\r\n    if (foundTrack) {\r\n      shuffleTracks.push(foundTrack);\r\n    }\r\n\r\n    return foundTrack || null;\r\n  };\r\n\r\n  if (shuffle) {\r\n    return findRandomTrack();\r\n  } else {\r\n    return findNextTrack();\r\n  }\r\n}\r\n\r\nexport function prev(\r\n  tracks: Track[],\r\n  track: Track | null,\r\n  shuffle: boolean,\r\n): Track | null {\r\n  const findPrevTrack = (): Track | null => {\r\n    if (track) {\r\n      const trackId = track.id;\r\n      const trackIndex = tracks.findIndex(track => track.id === trackId);\r\n\r\n      if (trackIndex > 0) {\r\n        return tracks[trackIndex - 1] || null;\r\n      } else if (tracks.length > 0) {\r\n        return tracks[tracks.length - 1] || null;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  if (shuffle) {\r\n    if (shuffleTracks.length > 1) {\r\n      shuffleTracks.pop();\r\n      return shuffleTracks.pop() || null;\r\n    } else {\r\n      return findPrevTrack();\r\n    }\r\n  } else {\r\n    return findPrevTrack();\r\n  }\r\n}\r\n\r\nexport default class Tracks {\r\n  static async demo(): Promise<Track[]> {\r\n    const tracks: TrackData[] = require(\"../sc.json\");\r\n\r\n    return prepeareTracks(tracks);\r\n  }\r\n\r\n  static async profileLikes(\r\n    profileUrl: string,\r\n    progressCallback?: (tracks: Track[]) => void,\r\n  ): Promise<Track[]> {\r\n    const profile: Profile = await getProfileData(profileUrl);\r\n    const tracks: Track[] = await getProfileLikes(profile, progressCallback);\r\n\r\n    return tracks;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { Track } from \"../lib/Tracks\";\r\nimport {\r\n  PlayerState,\r\n  TracksState,\r\n  setTrackAction,\r\n  setProgressAction,\r\n} from \"../store\";\r\nimport Flickity from \"flickity\";\r\nimport FlickityComponent from \"react-flickity-component\";\r\n\r\nfunction findTrackId(tracks: Track[], track: Track | null | undefined) {\r\n  if (track) {\r\n    for (let i = 0; i < tracks.length; i++) {\r\n      if (tracks[i].id === track.id) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nconst flickityOptions = {\r\n  initialIndex: 0,\r\n  wrapAround: true,\r\n  setGallerySize: false,\r\n  prevNextButtons: false,\r\n};\r\n\r\ninterface TrackImagesDispatchProps {\r\n  setTrack: (track: Track) => void;\r\n}\r\n\r\ninterface TrackImagesStateProps {\r\n  track: Track | null;\r\n  tracks: Track[];\r\n}\r\n\r\ntype TrackImagesProps = TrackImagesStateProps & TrackImagesDispatchProps;\r\n\r\nclass TrackImages extends Component<TrackImagesProps> {\r\n  flickity: Flickity | null;\r\n\r\n  constructor(props: TrackImagesProps) {\r\n    super(props);\r\n    this.flickity = null;\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if (this.flickity) {\r\n      this.flickity.on(\"select\", async e => {\r\n        if (typeof e === \"number\") {\r\n          this.props.setTrack(this.props.tracks[e]);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  shouldComponentUpdate = (nextProps: TrackImagesProps) => {\r\n    if (this.props.track === null) {\r\n      return true;\r\n    }\r\n\r\n    if (this.props.track !== nextProps.track) {\r\n      if (nextProps.track && this.flickity) {\r\n        this.flickity.select(\r\n          findTrackId(nextProps.tracks, nextProps.track),\r\n          true,\r\n          false,\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this.props.tracks.length !== nextProps.tracks.length) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <FlickityComponent\r\n        className=\"track-images\"\r\n        options={flickityOptions}\r\n        flickityRef={ref => {\r\n          this.flickity = (ref as unknown) as Flickity;\r\n        }}\r\n      >\r\n        {this.props.tracks.map((track: Track, id) => {\r\n          return (\r\n            <div key={`track-image-${id}`} className=\"track-image\">\r\n              <div\r\n                className=\"track-cover\"\r\n                style={{\r\n                  backgroundImage: `url(${track.artwork_url})`,\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </FlickityComponent>\r\n    );\r\n  };\r\n}\r\n\r\ninterface State {\r\n  player: PlayerState;\r\n  tracks: TracksState;\r\n}\r\n\r\nconst mapStateToProps = (state: State): TrackImagesStateProps => {\r\n  return {\r\n    track: state.player.track,\r\n    tracks: state.tracks.tracks,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): TrackImagesDispatchProps => {\r\n  return {\r\n    setTrack: (track: Track) => {\r\n      dispatch(setTrackAction(track));\r\n      dispatch(setProgressAction(0));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(TrackImages);\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\ninterface PlayerControlProps {\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n  action?: () => void;\r\n  active?: boolean;\r\n  ripple?: boolean;\r\n}\r\n\r\ninterface PlayerControlState {\r\n  animated: boolean;\r\n}\r\n\r\nexport default class PlayerControl extends Component<\r\n  PlayerControlProps,\r\n  PlayerControlState\r\n> {\r\n  static defaultProps = {\r\n    ripple: true,\r\n  };\r\n\r\n  constructor(props: PlayerControlProps, state: PlayerControlState) {\r\n    super(props, state);\r\n\r\n    this.state = {\r\n      animated: false,\r\n    };\r\n  }\r\n\r\n  render = () => {\r\n    let className = \"control\";\r\n\r\n    if (this.props.className) {\r\n      className += ` ${this.props.className}`;\r\n    }\r\n\r\n    if (this.props.active) {\r\n      className += ` is-active`;\r\n    }\r\n\r\n    let ripple: React.ReactNode = \"\";\r\n\r\n    if (this.props.ripple) {\r\n      ripple = (\r\n        <CSSTransition\r\n          in={this.state.animated}\r\n          classNames=\"ripple\"\r\n          timeout={300}\r\n          onEntered={() => {\r\n            this.setState({\r\n              animated: false,\r\n            });\r\n          }}\r\n        >\r\n          <div className=\"ripple\" />\r\n        </CSSTransition>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={className}\r\n        onMouseDownCapture={(e: React.MouseEvent | React.TouchEvent) => {\r\n          e.preventDefault();\r\n\r\n          this.setState({\r\n            animated: true,\r\n          });\r\n        }}\r\n        onTouchStartCapture={(e: React.MouseEvent | React.TouchEvent) => {\r\n          e.preventDefault();\r\n\r\n          this.setState({\r\n            animated: true,\r\n          });\r\n        }}\r\n        onMouseUpCapture={(e: React.MouseEvent | React.TouchEvent) => {\r\n          e.preventDefault();\r\n\r\n          if (this.props.action) {\r\n            this.props.action();\r\n          }\r\n        }}\r\n        onTouchEndCapture={(e: React.MouseEvent | React.TouchEvent) => {\r\n          e.preventDefault();\r\n\r\n          if (this.props.action) {\r\n            this.props.action();\r\n          }\r\n        }}\r\n      >\r\n        {ripple}\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport PlayerControl from \"./PlayerControl\";\r\nimport Shuffle from \"@material-ui/icons/Shuffle\";\r\nimport SkipPrevious from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNext from \"@material-ui/icons/SkipNext\";\r\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\r\nimport Pause from \"@material-ui/icons/Pause\";\r\nimport Repeat from \"@material-ui/icons/Repeat\";\r\nimport RepeatOne from \"@material-ui/icons/RepeatOne\";\r\nimport {\r\n  PlayerState,\r\n  TracksState,\r\n  playToggleAction,\r\n  shuffleToggleAction,\r\n  repeatToggleAction,\r\n  setTrackAction,\r\n} from \"../store\";\r\nimport { Track, next, prev } from \"../lib/Tracks\";\r\n\r\ninterface PlayerControlsDispatchToProps {\r\n  togglePlay: (state: boolean) => void;\r\n  toggleShuffle: (state: boolean) => void;\r\n  toggleRepeat: (state: boolean) => void;\r\n  setTrack: (track: Track) => void;\r\n}\r\n\r\ntype PlayerControlsStateProps = PlayerState & TracksState;\r\n\r\ntype PlayerControlsProps = PlayerControlsStateProps &\r\n  PlayerControlsDispatchToProps;\r\n\r\nclass PlayerControls extends Component<PlayerControlsProps> {\r\n  playToggle = () => {\r\n    this.props.togglePlay(!this.props.paused);\r\n  };\r\n\r\n  shuffleToggle = () => {\r\n    this.props.toggleShuffle(!this.props.shuffle);\r\n  };\r\n\r\n  repeatToggle = () => {\r\n    this.props.toggleRepeat(!this.props.repeat);\r\n  };\r\n\r\n  prevTrack = () => {\r\n    const track = prev(this.props.tracks, this.props.track, this.props.shuffle);\r\n\r\n    if (track) {\r\n      this.props.setTrack(track);\r\n    }\r\n  };\r\n\r\n  nextTrack = () => {\r\n    const track = next(this.props.tracks, this.props.track, this.props.shuffle);\r\n\r\n    if (track) {\r\n      this.props.setTrack(track);\r\n    }\r\n  };\r\n\r\n  componentDidUpdate = (prevProps: PlayerControlsProps) => {\r\n    if (prevProps.track === this.props.track) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    const classNames = {\r\n      shuffle: `control control-shuffle`,\r\n      prev: `control control-prev`,\r\n      play: `control control-play`,\r\n      next: `control control-next`,\r\n      repeat: `control control-repeat`,\r\n    };\r\n\r\n    classNames.play += !this.props.paused ? \" is-active\" : \"\";\r\n    classNames.shuffle += this.props.shuffle ? \" is-active\" : \"\";\r\n    classNames.repeat += this.props.repeat ? \" is-active\" : \"\";\r\n\r\n    return (\r\n      <div className=\"player-controls\">\r\n        <PlayerControl\r\n          className=\"control-shuffle\"\r\n          active={this.props.shuffle}\r\n          action={() => {\r\n            this.shuffleToggle();\r\n          }}\r\n        >\r\n          <Shuffle className=\"control-icon icon-shuffle\" />\r\n        </PlayerControl>\r\n\r\n        <PlayerControl\r\n          className={classNames.prev}\r\n          action={() => {\r\n            this.prevTrack();\r\n          }}\r\n        >\r\n          <SkipPrevious className=\"control-icon icon-prev\" />\r\n        </PlayerControl>\r\n\r\n        <PlayerControl\r\n          className=\"control-play\"\r\n          active={!this.props.paused}\r\n          action={() => {\r\n            this.playToggle();\r\n          }}\r\n          ripple={false}\r\n        >\r\n          <PlayArrow className=\"control-icon icon-play\" />\r\n          <Pause className=\"control-icon icon-pause\" />\r\n        </PlayerControl>\r\n\r\n        <PlayerControl\r\n          className={classNames.next}\r\n          action={() => {\r\n            this.nextTrack();\r\n          }}\r\n        >\r\n          <SkipNext className=\"control-icon icon-next\" />\r\n        </PlayerControl>\r\n\r\n        <PlayerControl\r\n          className=\"control-repeat\"\r\n          active={this.props.repeat}\r\n          action={() => {\r\n            this.repeatToggle();\r\n          }}\r\n        >\r\n          <Repeat className=\"control-icon icon-repeat-inactive\" />\r\n          <RepeatOne className=\"control-icon icon-repeat-active\" />\r\n        </PlayerControl>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\ninterface State {\r\n  player: PlayerState;\r\n  tracks: TracksState;\r\n}\r\n\r\nconst mapStateToProps = (state: State): PlayerControlsStateProps => {\r\n  return {\r\n    ...state.player,\r\n    ...state.tracks,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch,\r\n): PlayerControlsDispatchToProps => {\r\n  return {\r\n    togglePlay: (state: boolean): void => {\r\n      dispatch(playToggleAction(state));\r\n    },\r\n\r\n    toggleShuffle: (state: boolean): void => {\r\n      dispatch(shuffleToggleAction(state));\r\n    },\r\n\r\n    toggleRepeat: (state: boolean): void => {\r\n      dispatch(repeatToggleAction(state));\r\n    },\r\n\r\n    setTrack: (track: Track): void => {\r\n      dispatch(setTrackAction(track));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(PlayerControls);\r\n","export default class Utils {\r\n  static formatTimestamp(t: number): string {\r\n    const h = Math.floor(t / 1000 / 3600);\r\n    const m = Math.floor((t - h * 1000 * 3600) / 1000 / 60);\r\n    const s = Math.floor((t / 1000) % 60);\r\n\r\n    const time = [];\r\n\r\n    if (h > 0) {\r\n      time.push(h);\r\n      time.push(m > 10 ? m : \"0\" + m);\r\n    } else {\r\n      time.push(m);\r\n    }\r\n\r\n    time.push(s > 10 ? s : \"0\" + s);\r\n\r\n    return time.join(\":\");\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { PlayerState, togglePlaylistAction } from \"../store\";\r\nimport Utils from \"../lib/Utils\";\r\n\r\ninterface TrackInfoDispatchProps {\r\n  togglePlaylist: (state: boolean) => void;\r\n}\r\n\r\ninterface TrackInfoControlsOptionsProps {}\r\n\r\ninterface TrackShortInfo {\r\n  title: string;\r\n  user: string;\r\n  duration: number;\r\n}\r\n\r\ntype TrackInfoProps = PlayerState &\r\n  TrackInfoDispatchProps &\r\n  TrackInfoControlsOptionsProps;\r\n\r\nclass TrackInfo extends Component<TrackInfoProps> {\r\n  render = () => {\r\n    const track: TrackShortInfo = {\r\n      title: this.props.track ? this.props.track.title : \"No Track\",\r\n      user: this.props.track ? this.props.track.user.username : \"No User\",\r\n      duration: this.props.track ? this.props.track.duration : 0,\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className=\"track-info\"\r\n        onClick={() => {\r\n          this.props.togglePlaylist(!this.props.playlistActive);\r\n        }}\r\n      >\r\n        <div className=\"visualization-waves\">\r\n          <div className=\"wave\" />\r\n          <div className=\"wave\" />\r\n          <div className=\"wave\" />\r\n        </div>\r\n        <div className=\"track-title\">{track.title}</div>\r\n        <div className=\"track-user\">{track.user}</div>\r\n        <div className=\"track-time\">\r\n          <div className=\"current-time\">0:00</div>\r\n          <div className=\"separator\">/</div>\r\n          <div className=\"current-duration\">\r\n            {Utils.formatTimestamp(track.duration)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\ninterface State {\r\n  player: PlayerState;\r\n}\r\n\r\nconst mapStateProps = (state: State): PlayerState => {\r\n  return {\r\n    ...state.player,\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch: Dispatch): TrackInfoDispatchProps => {\r\n  return {\r\n    togglePlaylist: (state: boolean) => {\r\n      dispatch(togglePlaylistAction(state));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateProps,\r\n  mapDispatchProps,\r\n)(TrackInfo);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport {\r\n  PlayerState,\r\n  TracksState,\r\n  ProgressState,\r\n  setTrackAction,\r\n  setProgressAction,\r\n  playToggleAction,\r\n} from \"../store\";\r\nimport { Track } from \"../lib/Tracks\";\r\nimport Utils from \"../lib/Utils\";\r\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\r\nimport Pause from \"@material-ui/icons/Pause\";\r\n\r\ninterface PlaylistStateProps {\r\n  shuffle: boolean;\r\n  repeat: boolean;\r\n  paused: boolean;\r\n  playlistActive: boolean;\r\n  progress: number;\r\n  track: Track | null;\r\n  tracks: Track[];\r\n}\r\n\r\ninterface PlaylistDispatchProps {\r\n  setTrack: (track: Track) => void;\r\n  togglePLay: (state: boolean) => void;\r\n}\r\n\r\ntype PlaylistProps = PlaylistStateProps & PlaylistDispatchProps;\r\n\r\nclass Playlist extends Component<PlaylistProps> {\r\n  playlist: HTMLDivElement | null;\r\n\r\n  constructor(props: PlaylistProps) {\r\n    super(props);\r\n\r\n    this.playlist = null;\r\n  }\r\n\r\n  componentDidUpdate = (prevProps: PlaylistProps) => {\r\n    if (prevProps.track !== this.props.track) {\r\n      this.scrollToTrack();\r\n    }\r\n  };\r\n\r\n  playTrack = (track: Track) => {\r\n    if (!this.props.track || this.props.track.id !== track.id) {\r\n      this.props.setTrack(track);\r\n      this.props.togglePLay(false);\r\n    } else {\r\n      this.props.togglePLay(!this.props.paused);\r\n    }\r\n  };\r\n\r\n  scrollToTrack = () => {\r\n    if (this.playlist) {\r\n      const id = this.props.tracks.findIndex(\r\n        track => track === this.props.track,\r\n      );\r\n      const trackHeight = 50;\r\n      const top =\r\n        id * trackHeight - this.playlist.offsetHeight / 2 + trackHeight / 2;\r\n\r\n      this.playlist.scrollTo({\r\n        top: top,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div\r\n        className=\"playlist\"\r\n        ref={ref => {\r\n          this.playlist = ref;\r\n        }}\r\n      >\r\n        <div className=\"tracks-list\">\r\n          {this.props.tracks.map((track, id) => {\r\n            let className: string = \"track-item\";\r\n            let progressWidth: number = 0;\r\n\r\n            if (this.props.track && track.id === this.props.track.id) {\r\n              className += \" is-active\";\r\n\r\n              if (this.props.paused === false) {\r\n                className += \" is-playing\";\r\n              }\r\n\r\n              if (this.props.progress > 0) {\r\n                progressWidth =\r\n                  (this.props.progress / this.props.track.duration) * 100;\r\n              }\r\n            }\r\n\r\n            return (\r\n              <div\r\n                className={className}\r\n                key={`track-item-${id}`}\r\n                onClick={() => this.playTrack(track)}\r\n              >\r\n                <div\r\n                  className=\"track-progress\"\r\n                  style={{ width: `${progressWidth}%` }}\r\n                />\r\n                <div className=\"play-track\">\r\n                  <PlayArrow className=\"play-icon\" />\r\n                  <Pause className=\"pause-icon\" />\r\n                </div>\r\n                <div className=\"track-meta\">\r\n                  <div className=\"track-title\">{track.title}</div>\r\n                  <div className=\"track-user\">{track.user.username}</div>\r\n                </div>\r\n                <div className=\"track-duration\">\r\n                  {Utils.formatTimestamp(track.duration)}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\ninterface State {\r\n  player: PlayerState;\r\n  tracks: TracksState;\r\n  progress: ProgressState;\r\n}\r\n\r\nconst mapStateProps = (state: State): PlaylistStateProps => {\r\n  return {\r\n    shuffle: state.player.shuffle,\r\n    repeat: state.player.repeat,\r\n    paused: state.player.paused,\r\n    playlistActive: state.player.playlistActive,\r\n    track: state.player.track,\r\n    progress: state.progress.progress,\r\n    tracks: state.tracks.tracks,\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch: Dispatch): PlaylistDispatchProps => {\r\n  return {\r\n    setTrack: (track: Track) => {\r\n      dispatch(setTrackAction(track));\r\n      dispatch(setProgressAction(0));\r\n    },\r\n\r\n    togglePLay: (state: boolean) => {\r\n      dispatch(playToggleAction(state));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateProps,\r\n  mapDispatchProps,\r\n)(Playlist);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\ntype InputRangeProps = {\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  value: number;\r\n  className?: string;\r\n  onStart?: (value: number) => void;\r\n  onEnd?: (value: number) => void;\r\n  onChange?: (value: number) => void;\r\n};\r\n\r\ninterface InputRangeState {\r\n  value: number;\r\n  changing: boolean;\r\n}\r\n\r\nclass InputRange extends Component<InputRangeProps, InputRangeState> {\r\n  inputValue: number;\r\n  trackWidth: number;\r\n\r\n  constructor(props: InputRangeProps, state: InputRangeState) {\r\n    super(props, state);\r\n    this.inputValue = 0;\r\n    this.trackWidth = 0;\r\n\r\n    this.state = {\r\n      value: this.props.value,\r\n      changing: false,\r\n    };\r\n  }\r\n\r\n  changeStart = (e: React.MouseEvent | React.TouchEvent) => {\r\n    this.setState({\r\n      value: this.props.value,\r\n      changing: true,\r\n    });\r\n\r\n    if (this.props.onStart) {\r\n      this.props.onStart(this.state.value);\r\n    }\r\n  };\r\n\r\n  changeStop = (e: React.MouseEvent | React.TouchEvent) => {\r\n    this.setState({\r\n      changing: false,\r\n    });\r\n\r\n    if (this.props.onEnd) {\r\n      this.props.onEnd(this.state.value);\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    let inputValue = this.props.value;\r\n\r\n    if (this.state.changing) {\r\n      inputValue = this.state.value;\r\n    }\r\n\r\n    const trackWidth = (inputValue / this.props.max) * 100;\r\n\r\n    let className = \"input-range\";\r\n\r\n    if (this.props.className) {\r\n      className += \" \" + this.props.className;\r\n    }\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className=\"input-range-bar\">\r\n          <div\r\n            className=\"input-range-track\"\r\n            style={{ width: `${trackWidth}%` }}\r\n          />\r\n        </div>\r\n        <input\r\n          className=\"input-element\"\r\n          type=\"range\"\r\n          value={inputValue}\r\n          min={this.props.min}\r\n          max={this.props.max}\r\n          step={this.props.step}\r\n          onChange={e => {\r\n            const value = parseFloat(e.target.value);\r\n\r\n            this.setState({\r\n              value,\r\n            });\r\n\r\n            if (this.props.onChange) {\r\n              this.props.onChange(value);\r\n            }\r\n          }}\r\n          onMouseDownCapture={e => {\r\n            this.changeStart(e);\r\n          }}\r\n          onTouchStartCapture={e => {\r\n            this.changeStart(e);\r\n          }}\r\n          onMouseUpCapture={e => {\r\n            this.changeStop(e);\r\n          }}\r\n          onTouchEndCapture={e => {\r\n            this.changeStop(e);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default connect()(InputRange);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport {\r\n  PlayerState,\r\n  ProgressState,\r\n  setProgressAction,\r\n  setAudioPlayerProgressNeedsUpdateAction,\r\n} from \"../store\";\r\nimport throttle from \"lodash/throttle\";\r\nimport InputRange from \"./InputRange\";\r\n\r\ntype ProgressStateProps = PlayerState & ProgressState;\r\n\r\ninterface ProgressDispatchProps {\r\n  setProgress: (progress: number) => void;\r\n  audioProgressNeedsUpdate: () => void;\r\n}\r\n\r\ntype ProgressProps = ProgressStateProps & ProgressDispatchProps;\r\n\r\nclass Progress extends Component<ProgressProps> {\r\n  updateProgress = throttle((progress: number) => {\r\n    this.props.setProgress(progress);\r\n  }, 20);\r\n\r\n  changeStart = (e: React.MouseEvent | React.TouchEvent) => {\r\n    this.setState({\r\n      changing: true,\r\n    });\r\n  };\r\n\r\n  changeStop = (e: React.MouseEvent | React.TouchEvent) => {\r\n    const progress = parseInt((e.target as HTMLInputElement).value);\r\n\r\n    this.setState({\r\n      changing: false,\r\n    });\r\n\r\n    this.updateProgress(progress);\r\n  };\r\n\r\n  render = () => {\r\n    const max = this.props.track ? this.props.track.duration : 0;\r\n\r\n    return (\r\n      <InputRange\r\n        className=\"progress\"\r\n        min={0}\r\n        max={max}\r\n        step={1}\r\n        value={this.props.progress}\r\n        onEnd={value => this.updateProgress(value)}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\ninterface State {\r\n  player: PlayerState;\r\n  progress: ProgressState;\r\n}\r\n\r\nconst mapStateProps = (state: State): ProgressStateProps => {\r\n  return {\r\n    ...state.player,\r\n    ...state.progress,\r\n  };\r\n};\r\nconst mapDispatchProps = (dispatch: Dispatch): ProgressDispatchProps => {\r\n  return {\r\n    setProgress: (progress: number): void => {\r\n      dispatch(setProgressAction(progress));\r\n      dispatch(setAudioPlayerProgressNeedsUpdateAction(true));\r\n    },\r\n\r\n    audioProgressNeedsUpdate: (): void => {\r\n      dispatch(setAudioPlayerProgressNeedsUpdateAction(true));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateProps,\r\n  mapDispatchProps,\r\n)(Progress);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport {\r\n  PlayerState,\r\n  ProgressState,\r\n  TracksState,\r\n  setTrackAction,\r\n  setProgressAction,\r\n  setAudioPlayerProgressNeedsUpdateAction,\r\n} from \"../store\";\r\nimport throttle from \"lodash/throttle\";\r\nimport { Track, next } from \"../lib/Tracks\";\r\n\r\ninterface AudioPlayerDispatchProps {\r\n  updateProgress: (progress: number) => void;\r\n  audioProgressUpdated: () => void;\r\n  setTrack: (track: Track) => void;\r\n}\r\n\r\ntype AudioPlayerStateProps = PlayerState & ProgressState & TracksState;\r\n\r\ntype AudioPlayerProps = AudioPlayerDispatchProps & AudioPlayerStateProps;\r\n\r\ninterface AudioPlayerState {\r\n  canplay: boolean;\r\n}\r\n\r\nclass AudioPlayer extends Component<AudioPlayerProps, AudioPlayerState> {\r\n  audio: HTMLAudioElement | null;\r\n\r\n  constructor(props: AudioPlayerProps, state: AudioPlayerState) {\r\n    super(props, state);\r\n\r\n    this.audio = null;\r\n\r\n    this.state = {\r\n      canplay: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if (this.audio) {\r\n      this.audio.addEventListener(\"error\", (err: ErrorEvent) => {\r\n        if (this.audio && this.props.track) {\r\n          this.audio.src = this.props.track.stream_url;\r\n        }\r\n      });\r\n\r\n      this.audio.addEventListener(\"canplay\", () => {\r\n        this.setState({\r\n          canplay: true,\r\n        });\r\n      });\r\n\r\n      this.audio.addEventListener(\"loadstart\", () => {\r\n        this.setState({\r\n          canplay: false,\r\n        });\r\n      });\r\n\r\n      this.audio.addEventListener(\r\n        \"timeupdate\",\r\n        throttle(() => {\r\n          if (this.audio) {\r\n            this.props.updateProgress(this.audio.currentTime * 1000);\r\n          }\r\n        }, 16),\r\n      );\r\n\r\n      this.audio.addEventListener(\"ended\", () => {\r\n        if (!this.props.repeat) {\r\n          const track = next(\r\n            this.props.tracks,\r\n            this.props.track,\r\n            this.props.shuffle,\r\n          );\r\n\r\n          if (track) {\r\n            this.props.setTrack(track);\r\n          }\r\n        } else {\r\n          if (this.props.track) {\r\n            this.props.setTrack(this.props.track);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidUpdate = async (prevProps: AudioPlayerProps) => {\r\n    if (this.props.track && this.audio) {\r\n      if (prevProps.track !== this.props.track) {\r\n        this.audio.src = this.props.track.stream_url;\r\n      }\r\n\r\n      this.audio.loop = this.props.repeat;\r\n\r\n      this.audio.volume = this.props.volume;\r\n\r\n      if (this.props.audioPlayerProgressNeedsUpdate) {\r\n        if (prevProps.progress !== this.props.progress) {\r\n          this.audio.currentTime = this.props.progress / 1000;\r\n        }\r\n\r\n        this.props.audioProgressUpdated();\r\n      }\r\n\r\n      if (this.state.canplay) {\r\n        if (this.props.paused) {\r\n          await this.audio.pause();\r\n        } else {\r\n          try {\r\n            await this.audio.play();\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <audio\r\n        ref={ref => {\r\n          this.audio = ref;\r\n        }}\r\n        style={{ display: \"none\" }}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\ninterface State {\r\n  player: PlayerState;\r\n  progress: ProgressState;\r\n  tracks: TracksState;\r\n}\r\n\r\nconst mapStateProps = (state: State): AudioPlayerStateProps => {\r\n  return {\r\n    ...state.player,\r\n    ...state.progress,\r\n    ...state.tracks,\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch: Dispatch): AudioPlayerDispatchProps => {\r\n  return {\r\n    updateProgress: (progress: number): void => {\r\n      dispatch(setProgressAction(progress));\r\n    },\r\n\r\n    audioProgressUpdated: (): void => {\r\n      dispatch(setAudioPlayerProgressNeedsUpdateAction(false));\r\n    },\r\n\r\n    setTrack: (track: Track): void => {\r\n      dispatch(setTrackAction(track));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateProps,\r\n  mapDispatchProps,\r\n)(AudioPlayer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { SidebarState, toggleSidebarAction } from \"../store\";\r\nimport PlayerControl from \"./PlayerControl\";\r\n\r\ninterface SidebarButtonDispatchProps {\r\n  toggleSidebar: (state: boolean) => void;\r\n}\r\n\r\ninterface SidebarButtonStateProps {\r\n  sidebarActive: boolean;\r\n}\r\n\r\ntype SidebarButtonProps = SidebarButtonDispatchProps & SidebarButtonStateProps;\r\n\r\nclass SidebarButton extends Component<SidebarButtonProps> {\r\n  render = () => {\r\n    return (\r\n      <PlayerControl\r\n        className=\"sidebar-button\"\r\n        active={this.props.sidebarActive}\r\n        action={() => {\r\n          this.props.toggleSidebar(!this.props.sidebarActive);\r\n        }}\r\n      >\r\n        <div className=\"line line-1\" />\r\n        <div className=\"line line-2\" />\r\n        <div className=\"line line-3\" />\r\n      </PlayerControl>\r\n    );\r\n  };\r\n}\r\n\r\ninterface State {\r\n  sidebar: SidebarState;\r\n}\r\n\r\nconst mapStateProps = (state: State): SidebarButtonStateProps => {\r\n  return {\r\n    sidebarActive: state.sidebar.sidebarActive,\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch: Dispatch): SidebarButtonDispatchProps => {\r\n  return {\r\n    toggleSidebar: (state: boolean): void => {\r\n      dispatch(toggleSidebarAction(state));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateProps,\r\n  mapDispatchProps,\r\n)(SidebarButton);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport {\r\n  PlayerState,\r\n  SidebarState,\r\n  toggleSidebarAction,\r\n  setVolumeAction,\r\n} from \"../store\";\r\nimport VolumeMute from \"@material-ui/icons/VolumeMute\";\r\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\r\nimport InputRange from \"./InputRange\";\r\nimport PlayerControl from \"./PlayerControl\";\r\nimport throttle from \"lodash/throttle\";\r\n\r\ninterface SidebarDispatchProps {\r\n  toggleSidebar: (state: boolean) => void;\r\n  setVolume: (volume: number) => void;\r\n}\r\n\r\ninterface SidebarStateProps {\r\n  sidebarActive: boolean;\r\n  volume: number;\r\n}\r\n\r\ntype SidebarProps = SidebarDispatchProps & SidebarStateProps;\r\n\r\nclass Sidebar extends Component<SidebarProps> {\r\n  updateVolume = throttle((volume: number) => {\r\n    this.props.setVolume(volume);\r\n  }, 20);\r\n\r\n  render = () => {\r\n    let className = \"sidebar\";\r\n    let volumeClassName = \"volume\";\r\n\r\n    if (this.props.sidebarActive) {\r\n      className += \" is-active\";\r\n    }\r\n\r\n    if (this.props.volume === 0) {\r\n      volumeClassName += \" is-muted\";\r\n    }\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div\r\n          className=\"sidebar-back\"\r\n          onClick={() => {\r\n            this.props.toggleSidebar(false);\r\n          }}\r\n        />\r\n        <div className=\"sidebar-content\">\r\n          <div className=\"sidebar-header\">\r\n            <div className=\"profile\">\r\n              <img\r\n                className=\"profile-image\"\r\n                src=\"/icon-128.png\"\r\n                alt=\"\"\r\n                width=\"64\"\r\n                height=\"64\"\r\n              />\r\n              <div className=\"profile-info\">\r\n                <div className=\"profile-name\">Prof</div>\r\n                <div className=\"profile-email\">online7890@gmail.com</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"sidebar-controls\">\r\n            <div className={volumeClassName}>\r\n              <PlayerControl\r\n                className=\"volume-button\"\r\n                action={() => {\r\n                  this.props.setVolume(0);\r\n                }}\r\n                ripple={true}\r\n              >\r\n                <VolumeUp className=\"volume-icon volume-up\" />\r\n                <VolumeMute className=\"volume-icon volume-mute\" />\r\n              </PlayerControl>\r\n              <InputRange\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={this.props.volume}\r\n                onChange={volume => this.updateVolume(volume)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\ninterface State {\r\n  sidebar: SidebarState;\r\n  player: PlayerState;\r\n}\r\n\r\nconst mapStateProps = (state: State): SidebarStateProps => {\r\n  return {\r\n    sidebarActive: state.sidebar.sidebarActive,\r\n    volume: state.player.volume,\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch: Dispatch): SidebarDispatchProps => {\r\n  return {\r\n    toggleSidebar: (state: boolean): void => {\r\n      dispatch(toggleSidebarAction(state));\r\n    },\r\n    setVolume: (volume: number): void => {\r\n      dispatch(setVolumeAction(volume));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateProps,\r\n  mapDispatchProps,\r\n)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport Tracks, { Track } from \"../lib/Tracks\";\r\nimport {\r\n  TracksState,\r\n  PlayerState,\r\n  setTracksAction,\r\n  togglePlaylistAction,\r\n  setTrackAction,\r\n} from \"../store\";\r\n\r\nimport TrackImages from \"./TrackImages\";\r\nimport PlayerControls from \"./PlayerControls\";\r\nimport TrackInfo from \"./TrackInfo\";\r\nimport Playlist from \"./Playlist\";\r\nimport Progress from \"./Progress\";\r\nimport AudioPlayer from \"./AudioPlayer\";\r\nimport SidebarButton from \"./SidebarButton\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\ninterface PlayerDispatchToProps {\r\n  loadTracks: () => void;\r\n  togglePlaylist: (state: boolean) => void;\r\n  setTrack: (track: Track) => void;\r\n}\r\n\r\ntype PlayerStateProps = TracksState & PlayerState;\r\n\r\ntype PlayerProps = PlayerStateProps & PlayerDispatchToProps;\r\n\r\nclass Player extends Component<PlayerProps> {\r\n  componentDidMount = async () => {\r\n    await this.props.loadTracks();\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    if (!this.props.track && this.props.tracks.length > 0) {\r\n      this.props.setTrack(this.props.tracks[0]);\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    let className = \"player\";\r\n\r\n    if (this.props.playlistActive) {\r\n      className += \" playlist-active\";\r\n    }\r\n\r\n    return (\r\n      <div className={className}>\r\n        <SidebarButton />\r\n        <Sidebar />\r\n        <TrackImages />\r\n        <TrackInfo />\r\n        <Progress />\r\n        <AudioPlayer />\r\n        <PlayerControls />\r\n        <Playlist />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\ninterface State {\r\n  player: PlayerState;\r\n  tracks: TracksState;\r\n}\r\n\r\nconst mapStateToProps = (state: State): PlayerStateProps => {\r\n  return {\r\n    ...state.player,\r\n    ...state.tracks,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): PlayerDispatchToProps => {\r\n  return {\r\n    loadTracks: async (): Promise<void> => {\r\n      if (process.env.REACT_APP_PRODUCTION === \"true\") {\r\n        dispatch(\r\n          setTracksAction(\r\n            await Tracks.profileLikes(\r\n              `https://soundcloud.com/profesor08`,\r\n              tracks => {\r\n                dispatch(setTracksAction(tracks));\r\n              },\r\n            ),\r\n          ),\r\n        );\r\n      } else {\r\n        dispatch(setTracksAction(await Tracks.demo()));\r\n      }\r\n    },\r\n\r\n    togglePlaylist: (state: boolean) => {\r\n      dispatch(togglePlaylistAction(state));\r\n    },\r\n\r\n    setTrack: (track: Track): void => {\r\n      dispatch(setTrackAction(track));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Player);\r\n","import React from \"react\";\nimport Player from \"./Player\";\n\nfunction App() {\n  return <Player />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"normalize.css\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\".player-container\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}